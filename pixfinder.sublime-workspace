{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"opt",
				"options"
			],
			[
				"_get",
				"_getBorderPxsWithOffset"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"op",
				"opt"
			],
			[
				"pix",
				"pixelsForQueue"
			],
			[
				"_b",
				"_bfsBorderPxs"
			],
			[
				"fil",
				"filter"
			],
			[
				"n",
				"nPxs"
			],
			[
				"re",
				"return"
			],
			[
				"ins",
				"insideObject"
			],
			[
				"c",
				"ctx"
			],
			[
				"wi",
				"window"
			],
			[
				"pixe",
				"pixels"
			],
			[
				"border",
				"borderPxs"
			],
			[
				"get",
				"getContext"
			],
			[
				"bor",
				"borderPxs"
			],
			[
				"con",
				"console"
			],
			[
				"poly",
				"poly2cw  (variable)"
			],
			[
				"tim",
				"timeEnd"
			],
			[
				"no",
				"notInBlacklist"
			],
			[
				"px",
				"pxsForQueue"
			],
			[
				"nP",
				"nPxCols"
			],
			[
				"is",
				"isStartPxInObject"
			],
			[
				"img",
				"imgSize"
			],
			[
				"pro",
				"prototype"
			],
			[
				"fun",
				"function"
			],
			[
				"draw",
				"drawGeometry"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 138.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 602.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/var/www/pixfinder",
		"/var/www/pixfinder/src"
	],
	"file_history":
	[
		"/var/www/pixfinder/debug/index.html",
		"/var/www/pixfinder/src/Pixfinder.js",
		"/var/www/pixfinder/src/Util/Canvas.js",
		"/var/www/pixfinder/src/Util/Math.js",
		"/var/www/pixfinder/examples/map/index.html",
		"/var/www/pixfinder/src/Algo/poly2cw.js",
		"/var/www/pixfinder/src/Algo/hull.js",
		"/var/www/pixfinder/src/Algo/clipper_unminified.js",
		"/var/www/pixfinder/src/Util/poly2cw.js",
		"/var/www/pixfinder/src/Struct/Bfs.js",
		"/var/www/pixfinder/dist/all.js",
		"/var/www/pixfinder/dist/all.min.js",
		"/home/ageonya/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/var/www/pixfinder/src/Struct/DisjointSet.js",
		"/var/www/pixfinder/node_modules/gulp/node_modules/gulp-util/node_modules/vinyl/index.js",
		"/home/ageonya/.config/sublime-text-3/Packages/User/SublimeCodeIntel.sublime-settings",
		"/home/ageonya/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/ageonya/.config/sublime-text-3/Packages/SublimeCodeIntel/Default (Linux).sublime-mousemap",
		"/home/ageonya/.config/sublime-text-3/Packages/User/Default (Linux).sublime-mousemap",
		"/home/ageonya/.config/sublime-text-3/Packages/SublimeCodeIntel/Default (Linux).sublime-keymap",
		"/home/ageonya/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/ageonya/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/ageonya/.config/sublime-text-3/Packages/SublimeLinter/Default (Linux).sublime-keymap",
		"/var/www/pixfinder/src/Util/Util.js",
		"/var/www/pixfinder/src/Util/Events.js",
		"/var/www/pixfinder/src/Util/Dom.js",
		"/var/www/pixfinder/src/Util/Extend.js",
		"/home/ageonya/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/ageonya/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/var/www/pixfinder/TODO.md"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/var/www/pixfinder/examples"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_getBorderPxsWithOffset",
			"ctx1",
			"_getBorderPxsWithOffset",
			"fill",
			"_getBorderPxsWithOffset",
			"searchBorderPxs",
			"_getBorderPxsWithOffset",
			"_getBorderPxs",
			"_getBorderPxsWithOffset",
			"_getPixelsAroundBorder",
			"ctx1",
			"searchBorderPxs",
			"pixelsForQueueBlacklist",
			"_getPixelsAroundBorder",
			"notInBlacklistAndInsideObject",
			"insideObject",
			"notInBlacklistAndInsideObject",
			"_getBorderPxs",
			"_bfs",
			"_getBorderPxs",
			"onvisit",
			"_getBorderPxs",
			"_searchBorderPxs",
			"_bfs",
			"_getCommonDefaults",
			"_getCommonDefaults\n",
			"_areColorsEqualToColor",
			"getNeighborPixelsColors",
			"getNeighborPixels",
			"_getNeighborPixels(",
			"_getNeighborPixels",
			"_getColorPositionByPixel",
			"_getPixelByColorPosition",
			"_wrapByCanvas",
			"_setCommonDefaults",
			"getDistance",
			"p",
			"hull",
			"notInBlacklist",
			"exten",
			"notInBlacklist",
			"notInBlacklistAndInsideObject",
			"nPxs",
			"_getNeighborPixels",
			"extendBorderPxs",
			"notInBlacklistAndInsideObject",
			"fullBorderPxs",
			"blacklist",
			"borderPxs",
			"opt.distance",
			"blacklistHash",
			"borderPxs",
			"_wrapByCanvas",
			"borderPxs",
			"clearedBorderPxs",
			"processPixelQueue",
			"notInBlacklistAndInsideObject",
			"visitsCount",
			"poly2",
			"ctx",
			"poly2cw",
			"_getClosestVertice",
			"closes",
			"getNeigh",
			"_splitByDist",
			"_getClosestPxIndex",
			"_getClosestVertice",
			"lineTo",
			"tsp",
			"_getClosestPxIndex",
			"_getClosestVertice",
			"bbox.xl",
			"drawGeometry",
			"poly2cw",
			"poly",
			"processPixelQueue",
			".Y",
			".X",
			"AddPaths",
			"ClipperOffset",
			"OffsetPaths",
			"drawGeometry",
			"borderPxs",
			"_bfs",
			"distance",
			"use_deprecated",
			"ClipperOffset",
			"use_deprecated",
			"OffsetPaths",
			"offset",
			"console",
			"extend",
			"pts",
			"_isColorInColors",
			"drawGeometries",
			"_areColorsEqualToColors",
			"_getNeighborPixels (",
			"_getNeighborPixels(",
			"_buildObjectViaBFS",
			"_getNeighborPixels (",
			"_getNeighborPixels(",
			"_getNeighborPixels",
			"_getNeighborPixelsColors",
			"_getRegionsPixels",
			"_wrapByCanvas",
			"_setCommonDefaults",
			"_buildObjectViaBFS",
			"_getNeighborPixelsColors",
			"_getPixelByColorPosition",
			"_getNeighborPixels",
			"_getColorPositionByPixel",
			"_buildObjectViaBFS",
			"_setCommonDefaults",
			"getObj",
			"_splitByDist",
			"_getPixelByColorPosition",
			"_wrapByCanvas",
			"_getNeighborPixelsColors",
			"_getRegionsPixels",
			"nPx",
			"_getRegionsPixels",
			"_getNeighborPixelsColors",
			"_getColorPositionByPixel",
			"_getPixelByColorPosition",
			"_getRegionsPixels",
			"_splitByDist",
			"imgSize",
			"_getRegionsPixels"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"_getBorderPxs",
			"Pixfinder.Util.Canvas.getNeighborPixels(",
			"Pixfinder.Util.Canvas.getColorPositionByPixel",
			"Pixfinder.Util.Canvas.getPixelByColorPosition",
			"_getCommonDefaults",
			"searchBorderPxs",
			"blacklist",
			".y",
			".x",
			"pxs",
			"objs",
			"this.opt.",
			"this.opt"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "pixfinder.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/var/www/hull/hull.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 327.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
