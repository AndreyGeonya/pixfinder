0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.35
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/ageonya/.npm/3a52ce78-.lock
11 verbose tar pack [ '/home/ageonya/.npm/pixfinder/0.2.1/package.tgz', '.' ]
12 verbose tarball /home/ageonya/.npm/pixfinder/0.2.1/package.tgz
13 verbose folder .
14 info prepublish pixfinder@0.2.1
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /home/ageonya/.npm/1f1177db-tar.lock
17 silly lockFile 2fa8d2e0--npm-pixfinder-0-2-1-package-tgz tar:///home/ageonya/.npm/pixfinder/0.2.1/package.tgz
18 verbose lock tar:///home/ageonya/.npm/pixfinder/0.2.1/package.tgz /home/ageonya/.npm/2fa8d2e0--npm-pixfinder-0-2-1-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 2fa8d2e0--npm-pixfinder-0-2-1-package-tgz tar:///home/ageonya/.npm/pixfinder/0.2.1/package.tgz
22 silly lockFile 2fa8d2e0--npm-pixfinder-0-2-1-package-tgz tar:///home/ageonya/.npm/pixfinder/0.2.1/package.tgz
23 silly lockFile cf700f4f-onya-npm-pixfinder-0-2-1-package /home/ageonya/.npm/pixfinder/0.2.1/package
24 verbose lock /home/ageonya/.npm/pixfinder/0.2.1/package /home/ageonya/.npm/cf700f4f-onya-npm-pixfinder-0-2-1-package.lock
25 silly lockFile cf700f4f-onya-npm-pixfinder-0-2-1-package /home/ageonya/.npm/pixfinder/0.2.1/package
26 silly lockFile cf700f4f-onya-npm-pixfinder-0-2-1-package /home/ageonya/.npm/pixfinder/0.2.1/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'pixfinder',
29 silly publish   version: '0.2.1',
29 silly publish   description: 'Javascript library for extracting objects from images',
29 silly publish   homepage: 'https://github.com/AndriiHeonia/pixfinder',
29 silly publish   keywords:
29 silly publish    [ 'blob-detection',
29 silly publish      'feature-detection',
29 silly publish      'object-detection',
29 silly publish      'image-analysis',
29 silly publish      'computer-vision',
29 silly publish      'algorithm',
29 silly publish      'math' ],
29 silly publish   author: { name: 'Andrii Heonia' },
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'git://github.com/AndriiHeonia/pixfinder.git' },
29 silly publish   main: './src/pixfinder.js',
29 silly publish   dependencies:
29 silly publish    { rbush: '~1.3.4',
29 silly publish      'img-bfs': '~0.1.1',
29 silly publish      'hull.js': '0.2.1',
29 silly publish      'disjoint-set': '1.1.6' },
29 silly publish   devDependencies:
29 silly publish    { gulp: '~3.8.7',
29 silly publish      'gulp-jshint': '~1.5.5',
29 silly publish      'gulp-rename': '~1.2.0',
29 silly publish      'gulp-browserify': '~0.5.0',
29 silly publish      'gulp-uglify': '~0.2.1' },
29 silly publish   readme: 'Pixfinder is a JavaScript library for object detection.\n\n## Table of Contents\n\n- [Demos](#demos)\n- [How it works](#how-it-works)\n- [API](#api)\n    - [findAll](#findall)\n    - [find](#find)\n    - [util.dom](#utildom)\n    - [Point](#point)\n- [Development](#development)\n- [Changelog](#changelog)\n\n## Demos\n\nSee live demos here:\n- <a href="http://andreygeonya.github.io/pixfinder/planes" target="_blank">Airplanes counter</a>;\n- <a href="http://andreygeonya.github.io/pixfinder/beach" target="_blank">Dry coast area calculation</a>;\n- <a href="http://andreygeonya.github.io/pixfinder/2gis-map" target="_blank">2GIS map buildings hovering (better to see via Google Chrome)</a>.\n\n## How it works\n\nPixfinder analyzes image and extracts coordinates of each object. Objects should be detected by several criteria, the most important of which is the color.\n\nFor example we have aerial shot of planes and want to know how many planes at the airport right now:\n\n<img src="https://raw.githubusercontent.com/AndreyGeonya/pixfinder/master/readme-imgs/planes.jpg" />\n\nTo solve this problem we need to write several lines of code and pixfinder will find all planes in the image. So, let\'s find all planes and draw them all on canvas:\n\n    var img = document.getElementById(\'img\');\n\n    pix.util.dom.onload(img, function() {\n        var planes = pix.findAll({\n            img: img,\n            distance: 5,\n            colors: [\'eff1f0\'],\n            clearNoise: 50\n        });\n        document.getElementById(\'count\').innerHTML = planes.length;\n        planes.forEach(draw);\n    });\n\n    function draw(plane) {\n        var ctx = document.getElementById("canv").getContext("2d");\n        ctx.beginPath();\n        plane.forEach(function(point) {\n            ctx.arc(point.x, point.y, 1, 0, 2 * Math.PI);\n        });\n        ctx.stroke();\n        ctx.closePath();\n    }\n\nResult:\n<img src="https://raw.githubusercontent.com/AndreyGeonya/pixfinder/master/readme-imgs/planes-result.png" />\n\n## API\n\n### findAll\n\nSearch all objects in image.\n\n<table>\n    <thead>\n        <tr>\n            <th>Function</th>\n            <th>Return</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <code>pix.findAll(&lt;Object&gt;&nbsp;options)</code>\n            </td>\n            <td>\n                Array\n            </td>\n            <td>\n                Detects objects by given options.\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n#### options\n\n<table>\n    <thead>\n        <tr>\n            <th>Option</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>img</td>\n            <td>HTMLImageElement | HTMLCanvasElement</td>\n            <td></td>\n            <td>Loaded image or canvas element which has to be analyzed.</td>\n        </tr>\n        <tr>\n            <td>colors</td>\n            <td>Array</td>\n            <td></td>\n            <td>Colors of the objects that should be found.</td>\n        </tr>\n        <tr>\n            <td>tolerance</td>\n            <td>Number</td>\n            <td>50</td>\n            <td>Permissible variation of the color (number of shades). Helps to detect objects not only by strict colors (<code>colors</code> option), but by their shades too.</td>\n        </tr>\n        <tr>\n            <td>accuracy</td>\n            <td>Number</td>\n            <td>2</td>\n            <td>If accuracy = 1 then Pixfinder analyzes each pixel of the image, if accuracy = 2 then each 2nd pixel, etc. Large number for better performance and worse quality and vice versa. Number should be positive integer.</td>\n        </tr>\n        <tr>\n            <td>distance</td>\n            <td>Number</td>\n            <td>10</td>\n            <td>Distance between objects (in pixels). During image analysis Pixfinder detects all pixels according to specified colors and then splits them to several objects by distance. If distance between two pixels lesser then this option then pixels belong to the same object.</td>\n        </tr>\n        <tr>\n            <td>clearNoise</td>\n            <td>Boolean | Number</td>\n            <td>false</td>\n            <td>Removes all small objects after image analysis. If <code>false</code> then noise clearing is disabled, else if number is setted then all objects that contains less than specified number of pixels will be removed.</td>\n        </tr>       \n    </tbody>\n</table>\n\n### find\n\nStarts searching from the start point and returns one object that belongs to this point. This method should be useful for example if you want to highlight object under the mouse cursor.\n\n<table>\n    <thead>\n        <tr>\n            <th>Function</th>\n            <th>Return</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <code>pix.find(&lt;Object&gt;&nbsp;options)</code>\n            </td>\n            <td>\n                Array\n            </td>\n            <td>\n                Returns points of the object that belongs to the startPoint.\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n#### options\n\n<table>\n    <thead>\n        <tr>\n            <th>Option</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>img</td>\n            <td>HTMLImageElement | HTMLCanvasElement</td>\n            <td></td>\n            <td>Loaded image or canvas element which has to be analyzed.</td>\n        </tr>\n        <tr>\n            <td>colors</td>\n            <td>Array</td>\n            <td></td>\n            <td>Colors of the objects that should be found.</td>\n        </tr>\n        <tr>\n            <td>startPoint</td>\n            <td>Point</td>\n            <td></td>\n            <td>Point from which to start the object pixels search.</td>\n        </tr>\n        <tr>\n            <td>tolerance</td>\n            <td>Number</td>\n            <td>50</td>\n            <td>Permissible variation of the color (number of shades). Helps to detect objects not only by strict colors (<code>colors</code> option), but by their shades too.</td>\n        </tr>\n        <tr>\n            <td>distance</td>\n            <td>Number</td>\n            <td>10</td>\n            <td>Distance between objects (in pixels). If distance between two pixels lesser then this option then Pixfinder thinks that pixels belong to the same object.</td>\n        </tr>\n    </tbody>\n</table>\n\n### util.dom\n\nVarious DOM utility functions.\n\n<table>\n    <thead>\n        <tr>\n            <th>Method</th>\n            <th>Returns</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>onload(&lt;HTMLImageElement&gt; img, &lt;Function&gt; func)</code></td>\n            <td></td>\n            <td>Calls <code>func</code> function when <code>img</code> image has been loaded.</td>\n        </tr>\n        <tr>\n            <td>loaded(&lt;HTMLImageElement&gt; img)</code></td>\n            <td>Boolean</td>\n            <td>Checks or <code>img</code> image has been loaded.</td>\n        </tr>\n    </tbody>\n</table>\n\n### Point\n\nContains information about point.\n\n<table>\n    <thead>\n        <tr>\n            <th>Property</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>x</td>\n            <td>Number</td>\n            <td>The x coordinate.</td>\n        </tr>\n        <tr>\n            <td>y</td>\n            <td>Number</td>\n            <td>The y coordinate.</td>\n        </tr>\n    </tbody>\n</table>\n\n## To-do\n\n* write more demos;\n* improve performance;\n* make concavity param optional;\n* think about configurable color comparison function;\n* check and ensure that behaviour with distance 1px is correct;\n* write tests.\n\n## Development\n\n    npm install     # install dependencies\n    npm gulp build  # check the code with JSHint, run tests and build dist\n    npm gulp        # build and watch for the src changes\n\n## Changelog\n\n### 0.2.1 &mdash; 27.10.2014\n* Readme fixes\n\n### 0.2.0 &mdash; 27.10.2014\n* API changes without backward compatibility\n\n### 0.1.0 &mdash; 16.05.2014\n\n* First Pixfinder release (unstable alpha version)',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '9e5cb8d11f11e2a36ce883e0e448d1457711656c',
29 silly publish   bugs: { url: 'https://github.com/AndriiHeonia/pixfinder/issues' },
29 silly publish   _id: 'pixfinder@0.2.1',
29 silly publish   scripts: {},
29 silly publish   _shasum: '79d7737dc8feb0df2200fa2a6fdbad6e9b24d3b7',
29 silly publish   _from: '.' }
30 verbose request where is /pixfinder
31 verbose request registry https://registry.npmjs.org/
32 verbose request id 1ba9c7878704c89f
33 verbose url raw /pixfinder
34 verbose url resolving [ 'https://registry.npmjs.org/', './pixfinder' ]
35 verbose url resolved https://registry.npmjs.org/pixfinder
36 verbose request where is https://registry.npmjs.org/pixfinder
37 info trying registry request attempt 1 at 20:23:29
38 http PUT https://registry.npmjs.org/pixfinder
39 http 403 https://registry.npmjs.org/pixfinder
40 verbose headers { date: 'Wed, 04 Feb 2015 18:23:32 GMT',
40 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '12804',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-fra1240-FRA',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1423074209.981483,VS0,VE2055',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: forbidden cannot modify pre-existing version: 0.2.1
42 error old={"name":"pixfinder","version":"0.2.1","description":"Javascript library for extracting objects from images","homepage":"https://github.com/AndreyGeonya/pixfinder","keywords":["blob-detection","feature-detection","object-detection","image-analysis","computer-vision","algorithm","math"],"author":{"name":"Andrey Geonya"},"repository":{"type":"git","url":"git://github.com/AndreyGeonya/pixfinder.git"},"main":"./src/pixfinder.js","dependencies":{"rbush":"~1.3.4","img-bfs":"~0.1.1","hull.js":"0.2.1","disjoint-set":"1.1.6"},"devDependencies":{"gulp":"~3.8.7","gulp-jshint":"~1.5.5","gulp-rename":"~1.2.0","gulp-browserify":"~0.5.0","gulp-uglify":"~0.2.1"},"gitHead":"a89b769b50246e6297263b38f5f72b7ced437703","bugs":{"url":"https://github.com/AndreyGeonya/pixfinder/issues"},"_id":"pixfinder@0.2.1","scripts":{},"_shasum":"4a8ba8be8841f17e6c4b82e6fe75358bca22cda9","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"andreygeonya","email":"a.geonya@gmail.com"},"maintainers":[{"name":"andreygeonya","email":"a.geonya@gmail.com"}],"dist":{"shasum":"4a8ba8be8841f17e6c4b82e6fe75358bca22cda9","tarball":"http://registry.npmjs.org/pixfinder/-/pixfinder-0.2.1.tgz"}}
42 error new={"name":"pixfinder","version":"0.2.1","description":"Javascript library for extracting objects from images","homepage":"https://github.com/AndriiHeonia/pixfinder","keywords":["blob-detection","feature-detection","object-detection","image-analysis","computer-vision","algorithm","math"],"author":{"name":"Andrii Heonia"},"repository":{"type":"git","url":"git://github.com/AndriiHeonia/pixfinder.git"},"main":"./src/pixfinder.js","dependencies":{"rbush":"~1.3.4","img-bfs":"~0.1.1","hull.js":"0.2.1","disjoint-set":"1.1.6"},"devDependencies":{"gulp":"~3.8.7","gulp-jshint":"~1.5.5","gulp-rename":"~1.2.0","gulp-browserify":"~0.5.0","gulp-uglify":"~0.2.1"},"readme":"Pixfinder is a JavaScript library for object detection.\u000a\u000a## Table of Contents\u000a\u000a- [Demos](#demos)\u000a- [How it works](#how-it-works)\u000a- [API](#api)\u000a    - [findAll](#findall)\u000a    - [find](#find)\u000a    - [util.dom](#utildom)\u000a    - [Point](#point)\u000a- [Development](#development)\u000a- [Changelog](#changelog)\u000a\u000a## Demos\u000a\u000aSee live demos here:\u000a- <a href=\"http://andreygeonya.github.io/pixfinder/planes\" target=\"_blank\">Airplanes counter</a>;\u000a- <a href=\"http://andreygeonya.github.io/pixfinder/beach\" target=\"_blank\">Dry coast area calculation</a>;\u000a- <a href=\"http://andreygeonya.github.io/pixfinder/2gis-map\" target=\"_blank\">2GIS map buildings hovering (better to see via Google Chrome)</a>.\u000a\u000a## How it works\u000a\u000aPixfinder analyzes image and extracts coordinates of each object. Objects should be detected by several criteria, the most important of which is the color.\u000a\u000aFor example we have aerial shot of planes and want to know how many planes at the airport right now:\u000a\u000a<img src=\"https://raw.githubusercontent.com/AndreyGeonya/pixfinder/master/readme-imgs/planes.jpg\" />\u000a\u000aTo solve this problem we need to write several lines of code and pixfinder will find all planes in the image. So, let's find all planes and draw them all on canvas:\u000a\u000a    var img = document.getElementById('img');\u000a\u000a    pix.util.dom.onload(img, function() {\u000a        var planes = pix.findAll({\u000a            img: img,\u000a            distance: 5,\u000a            colors: ['eff1f0'],\u000a            clearNoise: 50\u000a        });\u000a        document.getElementById('count').innerHTML = planes.length;\u000a        planes.forEach(draw);\u000a    });\u000a\u000a    function draw(plane) {\u000a        var ctx = document.getElementById(\"canv\").getContext(\"2d\");\u000a        ctx.beginPath();\u000a        plane.forEach(function(point) {\u000a            ctx.arc(point.x, point.y, 1, 0, 2 * Math.PI);\u000a        });\u000a        ctx.stroke();\u000a        ctx.closePath();\u000a    }\u000a\u000aResult:\u000a<img src=\"https://raw.githubusercontent.com/AndreyGeonya/pixfinder/master/readme-imgs/planes-result.png\" />\u000a\u000a## API\u000a\u000a### findAll\u000a\u000aSearch all objects in image.\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Function</th>\u000a            <th>Return</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>\u000a                <code>pix.findAll(&lt;Object&gt;&nbsp;options)</code>\u000a            </td>\u000a            <td>\u000a                Array\u000a            </td>\u000a            <td>\u000a                Detects objects by given options.\u000a            </td>\u000a        </tr>\u000a    </tbody>\u000a</table>\u000a\u000a#### options\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Option</th>\u000a            <th>Type</th>\u000a            <th>Default</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>img</td>\u000a            <td>HTMLImageElement | HTMLCanvasElement</td>\u000a            <td></td>\u000a            <td>Loaded image or canvas element which has to be analyzed.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>colors</td>\u000a            <td>Array</td>\u000a            <td></td>\u000a            <td>Colors of the objects that should be found.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>tolerance</td>\u000a            <td>Number</td>\u000a            <td>50</td>\u000a            <td>Permissible variation of the color (number of shades). Helps to detect objects not only by strict colors (<code>colors</code> option), but by their shades too.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>accuracy</td>\u000a            <td>Number</td>\u000a            <td>2</td>\u000a            <td>If accuracy = 1 then Pixfinder analyzes each pixel of the image, if accuracy = 2 then each 2nd pixel, etc. Large number for better performance and worse quality and vice versa. Number should be positive integer.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>distance</td>\u000a            <td>Number</td>\u000a            <td>10</td>\u000a            <td>Distance between objects (in pixels). During image analysis Pixfinder detects all pixels according to specified colors and then splits them to several objects by distance. If distance between two pixels lesser then this option then pixels belong to the same object.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>clearNoise</td>\u000a            <td>Boolean | Number</td>\u000a            <td>false</td>\u000a            <td>Removes all small objects after image analysis. If <code>false</code> then noise clearing is disabled, else if number is setted then all objects that contains less than specified number of pixels will be removed.</td>\u000a        </tr>       \u000a    </tbody>\u000a</table>\u000a\u000a### find\u000a\u000aStarts searching from the start point and returns one object that belongs to this point. This method should be useful for example if you want to highlight object under the mouse cursor.\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Function</th>\u000a            <th>Return</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>\u000a                <code>pix.find(&lt;Object&gt;&nbsp;options)</code>\u000a            </td>\u000a            <td>\u000a                Array\u000a            </td>\u000a            <td>\u000a                Returns points of the object that belongs to the startPoint.\u000a            </td>\u000a        </tr>\u000a    </tbody>\u000a</table>\u000a\u000a#### options\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Option</th>\u000a            <th>Type</th>\u000a            <th>Default</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>img</td>\u000a            <td>HTMLImageElement | HTMLCanvasElement</td>\u000a            <td></td>\u000a            <td>Loaded image or canvas element which has to be analyzed.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>colors</td>\u000a            <td>Array</td>\u000a            <td></td>\u000a            <td>Colors of the objects that should be found.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>startPoint</td>\u000a            <td>Point</td>\u000a            <td></td>\u000a            <td>Point from which to start the object pixels search.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>tolerance</td>\u000a            <td>Number</td>\u000a            <td>50</td>\u000a            <td>Permissible variation of the color (number of shades). Helps to detect objects not only by strict colors (<code>colors</code> option), but by their shades too.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>distance</td>\u000a            <td>Number</td>\u000a            <td>10</td>\u000a            <td>Distance between objects (in pixels). If distance between two pixels lesser then this option then Pixfinder thinks that pixels belong to the same object.</td>\u000a        </tr>\u000a    </tbody>\u000a</table>\u000a\u000a### util.dom\u000a\u000aVarious DOM utility functions.\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Method</th>\u000a            <th>Returns</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>onload(&lt;HTMLImageElement&gt; img, &lt;Function&gt; func)</code></td>\u000a            <td></td>\u000a            <td>Calls <code>func</code> function when <code>img</code> image has been loaded.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>loaded(&lt;HTMLImageElement&gt; img)</code></td>\u000a            <td>Boolean</td>\u000a            <td>Checks or <code>img</code> image has been loaded.</td>\u000a        </tr>\u000a    </tbody>\u000a</table>\u000a\u000a### Point\u000a\u000aContains information about point.\u000a\u000a<table>\u000a    <thead>\u000a        <tr>\u000a            <th>Property</th>\u000a            <th>Type</th>\u000a            <th>Description</th>\u000a        </tr>\u000a    </thead>\u000a    <tbody>\u000a        <tr>\u000a            <td>x</td>\u000a            <td>Number</td>\u000a            <td>The x coordinate.</td>\u000a        </tr>\u000a        <tr>\u000a            <td>y</td>\u000a            <td>Number</td>\u000a            <td>The y coordinate.</td>\u000a        </tr>\u000a    </tbody>\u000a</table>\u000a\u000a## To-do\u000a\u000a* write more demos;\u000a* improve performance;\u000a* make concavity param optional;\u000a* think about configurable color comparison function;\u000a* check and ensure that behaviour with distance 1px is correct;\u000a* write tests.\u000a\u000a## Development\u000a\u000a    npm install     # install dependencies\u000a    npm gulp build  # check the code with JSHint, run tests and build dist\u000a    npm gulp        # build and watch for the src changes\u000a\u000a## Changelog\u000a\u000a### 0.2.1 &mdash; 27.10.2014\u000a* Readme fixes\u000a\u000a### 0.2.0 &mdash; 27.10.2014\u000a* API changes without backward compatibility\u000a\u000a### 0.1.0 &mdash; 16.05.2014\u000a\u000a* First Pixfinder release (unstable alpha version)","readmeFilename":"README.md","gitHead":"9e5cb8d11f11e2a36ce883e0e448d1457711656c","bugs":{"url":"https://github.com/AndriiHeonia/pixfinder/issues"},"_id":"pixfinder@0.2.1","scripts":{},"_shasum":"79d7737dc8feb0df2200fa2a6fdbad6e9b24d3b7","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"andriiheonia","email":"a.heonia@gmail.com"},"maintainers":[{"name":"andriiheonia","email":"a.heonia@gmail.com"}],"dist":{"shasum":"79d7737dc8feb0df2200fa2a6fdbad6e9b24d3b7","tarball":"http://registry.npmjs.org/pixfinder/-/pixfinder-0.2.1.tgz"}}: pixfinder
42 error     at RegClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
42 error     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
42 error     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:944:16
42 error     at process._tickCallback (node.js:442:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Linux 3.13.0-43-generic
45 error command "/usr/bin/node" "/usr/bin/npm" "publish"
46 error cwd /var/www/pixfinder
47 error node -v v0.10.35
48 error npm -v 1.4.28
49 verbose exit [ 1, true ]
